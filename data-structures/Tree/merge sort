MergeSort
 The merge() function is used for merging two halves. 
 The merge(arr, l, m, r) is a key process that assumes that arr[l..m] and arr[m+1..r] are sorted and merges the two sorted sub-arrays into one.

merge(int arr[],int l,int m,int r){
int n1= l + m +1;
int n2= r-m;

int L[]=new int[n1];
int R[]=new int[n2];

for(int i=0;i<n1;i++) L[i]=arr[i];

for(int j=0;j<n2;j++) R[j]=arr[j];

int i=0,j=0;
int k=l;

if(i<n1 || j<n2){
if(L[i]<R[j]){
  arr[k]=L[i];
  i++;
}
else{
arr[k]=R[j];
j++;
}
k++;
}

if(i<n1){
arr[k]=L[i];
i++;k++;
}

if(j<n2){
arr[k]=R[j];
j++;k++;
}
}
mergeSort(int arr[],int l,int r){
int m=l+(r-l)/2;
if(l<r){
mergeSort(arr,l,m);
mergeSort(arr,m+1,r);

merge(arr,l,m,r);
}
}
